#spring.profiles.include=oauth

server.port=8080
server.servlet.contest-path=/
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Datasource (MySQL Config)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/testwildb?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=jiwonsql98@
#spring.datasource.password=1234

# JPA
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

## Kakao
spring.security.oauth2.client.registration.kakao.client-id = a187033481cf8ba76d45af5f495940e7
spring.security.oauth2.client.registration.kakao.client-secret = p8dzHYZED7kfNUozdJelTWvn3wweKl9N
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-name = Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = POST

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id

## Google
spring.security.oauth2.client.registration.google.client-id=336056313642-fvkmh29ldkc49s65tlq1q5c9d5pil6aq.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri = http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name = Google

## Naver
spring.security.oauth2.client.registration.naver.client-id = iOmtEYOzjWoW75Mq4FlE
spring.security.oauth2.client.registration.naver.client-secret = ULXnU5hcA_
spring.security.oauth2.client.registration.naver.scope = name, email
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri = http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri = https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri = https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri = https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute = response

## AWS
cloud.aws.credentials.accessKey=AKIAU6NN4KHZO6FHRYXD
cloud.aws.credentials.secretKey=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
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=wil-s3
cloud.aws.stack.auto=false


#amazon.s3.region=ap-northeast-2
#amazon.s3.bucket=wil-s3
#amazon.aws.access-key-id=AKIAU6NN4KHZO6FHRYXD
#amazon.aws.access-key-secret=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

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

server.tomcat.connection-timeout=-1

spring.servlet.multipart.location=d://data/temp
spring.servlet.multipart.file-size-threshold=0B
